snippet cl "console.log"
	console.log(${1});

snippet cljson "console.log json"
	console.log(JSON.stringify(${1}, null, 4));

snippet promise "Promise"
	new Promise((resolve, reject) => {
	});

snippet rpromise "return new Promise"
	return new Promise((resolve, reject) => {
	});

snippet clm "console.log mirror"
	console.log(${1:}, "$1");
snippet cw "console.warn"
	console.warn("${1}");

snippet undef "undefined lazy"
	undefined
snippet exp "expect()"
	expect(${1})
snippet tbok ".to.be.ok"
	.to.be.ok(${1});
snippet tnbok ".to.be.ok"
	.to.not.be.ok(${1});
snippet tbeq ".to.equal(${1})"
	.to.be.equal(${1});
snippet tbab ".to.be.above(${1})"
	.to.be.above(${1});
snippet teq ".to.equal(${1})"
	.to.equal(${1});
snippet toeq ".to.equal(${1})"
	.to.equal(${1});
snippet fdx "findIndex"
	findIndex(${1})
snippet l "length"
	length
snippet athen "(add then promise)"
	}).then(() => {
		${1}
snippet lobj "let object = {};"
	let ${1} = {
		${2}
	};
snippet clsep "console.log('~~~~~~')"
	console.log('~~~~~~~~~~');

snippet ret "return"
	return ${1};

snippet setTimeout "setTimeout"
	setTimeout(() => {
		${2}
	}, ${1});

snippet pall "Promise.all()"
	Promise.all(${1});

snippet rpall "Promise.all()"
	return Promise.all(${1});

snippet Pall "Promise.all()"
	Promise.all(${1});

snippet throw "throw new Error"
	throw new Error(\`${1}\`)
