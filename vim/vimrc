" Note: Skip initialization for vim-tiny or vim-small.
if 0 | endif

if &compatible
	set nocompatible               " Be iMproved
endif

" Required:
set runtimepath+=~/.vim/bundle/neobundle.vim/
set runtimepath+=~/Documents/projects/perso/dotfiles-that-fly/vim/

" Required:
call neobundle#begin(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
" Required:
NeoBundleFetch 'Shougo/neobundle.vim'

NeoBundle "Shougo/unite.vim"
NeoBundle "Shougo/unite-outline"
"NeoBundle 'Shougo/deoplete.nvim'
NeoBundle 'ctrlpvim/ctrlp.vim'
NeoBundle "maxbrunsfeld/vim-yankstack"
NeoBundle 'tpope/vim-fugitive'
NeoBundle 'airblade/vim-gitgutter'
NeoBundle 'int3/vim-extradite'
NeoBundle 'tpope/vim-rhubarb'
NeoBundle 'tomtom/tcomment_vim'
NeoBundle 'junegunn/fzf'
NeoBundle 'junegunn/fzf.vim'
NeoBundle 'junegunn/vim-peekaboo'
NeoBundle 'tpope/vim-surround'
NeoBundle 'bkad/CamelCaseMotion'
NeoBundle 'tpope/vim-eunuch'
NeoBundle 'Raimondi/delimitMate'
NeoBundle 'docunext/closetag.vim'
NeoBundle 'rhysd/clever-f.vim'
NeoBundle 'henrik/vim-indexed-search'
NeoBundle 'kshenoy/vim-signature'
NeoBundle 'gcmt/taboo.vim'
NeoBundle "scrooloose/nerdtree"
NeoBundle "terryma/vim-multiple-cursors"

" --------- Themes --------
NeoBundle "chriskempson/base16-vim"
NeoBundle "Nequo/vim-allomancer"
NeoBundle "rakr/vim-two-firewatch"
NeoBundle "NerdyPepper/vim-colors-plain"
NeoBundle "arcticicestudio/nord-vim"
NeoBundle "robertmeta/nofrils"
NeoBundle "ayu-theme/ayu-vim"
NeoBundle 'morhetz/gruvbox'

NeoBundle 'rking/ag.vim'
NeoBundle "tomtom/tlib_vim"
NeoBundle "marcweber/vim-addon-mw-utils"
NeoBundle "garbas/vim-snipmate"
NeoBundle 'evidens/vim-twig'
NeoBundle "tomtom/tlib_vim"
NeoBundle "marcweber/vim-addon-mw-utils"

" --------- JS --------- "
"NeoBundle "roxma/vim-hug-neovim-rpc"
"NeoBundle "roxma/nvim-yarp"

NeoBundleLazy 'maralla/completor.vim', {'autoload':{'filetypes':['javascript']}}
NeoBundle 'posva/vim-vue'
NeoBundleLazy 'w0rp/ale', {'autoload':{'filetypes':['javascript', 'vue', 'css', 'scss', 'sass']}}
NeoBundleLazy 'jelera/vim-javascript-syntax', {'autoload':{'filetypes':['javascript', 'vue']}}
NeoBundleLazy 'vim-scripts/JavaScript-Indent', {'autoload':{'filetypes':['javascript', 'vue']}}
NeoBundleLazy 'heavenshell/vim-jsdoc', {'autoload':{'filetypes':['javascript', 'vue']}}
" NeoBundleLazy 'ternjs/tern_for_vim', {'autoload':{'filetypes':['javascript', 'vue']}}

call neobundle#end()

" Required:
filetype plugin indent on

" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
NeoBundleCheck


" Required:
filetype plugin indent on

" If there are uninstalled bundles found on startup,
" this will conveniently prompt you to install them.
NeoBundleCheck

set bg=dark
colo base16-eighties

set rtp+=~/.fz

syntax enable
set visualbell
set encoding=utf-8
" set t_Co=256
set term=screen-256color
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
if (has("termguicolors"))
    set termguicolors
endif
set noerrorbells
set ignorecase
set smartcase
set autoread
set hlsearch
set nonumber
set laststatus=2
set mouse=a
set backspace=indent,eol,start
set autoindent
set copyindent
highlight Search cterm=underline

set history=75
set undolevels=75
set title
set nobackup
set foldcolumn=1
set path+=**
" --- Tabs & indents
set tabstop=4
set shiftwidth=4
set expandtab
" set softtabstop=0
" set smarttab
" -- Clipboard
set clipboard=unnamedplus
" --- code wrapping
set wildmenu
set wildignore+=*/node_modules/*,*/vendor/*
set linespace=3

"Make vim faster
set nocursorcolumn      " Don't paint cursor column
set nocursorline
set lazyredraw          " Wait to redraw
set ttyfast
set scrolljump=8        " Scroll 8 lines at a time at bottom/top
let html_no_rendering=1 " Don't render italic, bold, links in HTML"

let mapleader = ","
let g:mapleader = ","

"stop using escape guys
imap jj <esc>
nmap <leader>w :w!<cr>
nmap <leader>q :q!<cr>
nmap <leader>n :tabNext<cr>
" close all splits except the one focused
nmap <leader>o :only<cr>
set backupdir=~/.vim/backup//
set directory=~/.vim/swap//
set undodir=~/.vim/undo//
nnoremap <Left> :vertical resize -2<CR>
nnoremap <Right> :vertical resize +2<CR>
nnoremap <Up> :resize -2<CR>
nnoremap <Down> :resize +2<CR>

nmap <leader>y <Plug>yankstack_substitute_older_paste
nmap <leader>Y <Plug>yankstack_substitute_new_paste
"
nnoremap <leader><space> :Buffer<cr>
nnoremap <leader>p :GFiles<cr>
nnoremap <leader>f :Lines<cr>
nnoremap <leader>r :<C-u>Unite -no-split -buffer-name=outline -start-insert outline<cr>

set statusline=%<%f\ %h%m%r%=%{fugitive#statusline()}\ \ %-14.(%l,%c%V%)\%p%%

"---- Case Motions -----"
map <silent> w <Plug>CamelCaseMotion_w
map <silent> b <Plug>CamelCaseMotion_b
map <silent> e <Plug>CamelCaseMotion_e
map <silent> ge <Plug>CamelCaseMotion_ge


"--- Nedtree ----"
nmap <C-b> :NERDTreeToggle<CR>
nmap <C-f> :NERDTreeFind<CR>


"------ Ale ------

let g:ale_linters = {
            \   'javascript': ['eslint', 'tcp://127.0.0.1:2089'],
            \   'php': ['phpcs'],
            \   'vue': ['vls']
            \}
let g:ale_statusline_format = ['⨉ %d', '⚠ %d', '⬥ ok']

"---- Removes Trailing Spaces on save ----"
autocmd BufWritePre * %s/\s\+$//e

" --- auto set type is js for vue files ----
au BufRead,BufNewFile *.vue set filetype=vue
" autocmd BufNewFile,BufRead *.vue set filetype=vue


" --- Completor PHP trigger ---- "
"  referred : https://github.com/maralla/completor.vim/issues/24
" let g:completor_php_omni_trigger = '([$\w]+|use\s*|->[$\w]*|::[$\w]*|implements\s*|extends\s*|class\s+[$\w]+|new\s*)$'

abbrev ee e **

" --- JsDoc conf ---- "
let g:jsdoc_allow_input_prompt = 1
let g:jsdoc_input_description = 1
let g:jsdoc_access_descriptions = 1
let g:jsdoc_underscore_private = 1
let g:jsdoc_enable_es6 = 1
let g:jsdoc_allow_shorthand = 1

map <leader>d :JsDoc <cr>

" --- Completor ---"
let g:completor_min_chars=2
let g:completor_auto_trigger=1

" ---  Ale ----"
let g:ale_lint_on_save=1
let g:ale_lint_on_text_changed=1
let g:ale_lint_on_enter=0
" let g:ale_statusline_format = ['⨉', '⚠', '⬥']
let g:ale_sign_error="x"
let g:ale_sign_warning="!"
let g:ale_sign_column_always = 1

" ---- FZF ---- "
"let $FZF_DEFAULT_COMMAND = 'ag -l -g "'"

"Tagbag
let g:tagbar_ctags_bin='/usr/bin/ctags-exuberant'

"Validation d'un JSON
abbrev validateJson :%!jq .
abbrev validatejson :%!jq .

abbrev eslintfix !node node_modules/eslint/bin/eslint.js --fix %
abbrev eslint !node node_modules/eslint/bin/eslint.js  %

abbrev clearswaps rm ~/.vim/swap/*

" augroup vimrc_autocmds
"   autocmd BufEnter * highlight OverLength ctermbg=darkgrey guibg=#111111
"   autocmd BufEnter * match OverLength /\%80v.*/
" augroup END

" let g:LanguageClient_serverCommands = {
"     \ 'javascript': ['tcp://127.0.0.1:2089'],
"     \ 'vue': ['vls']
"     \ }
" map <leader>m :call LanguageClient_contextMenu()<CR>


" Or map each action separately
" nnoremap <silent> K :call LanguageClient#textDocument_hover()<CR>
" nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>
" nnoremap <silent> <F2> :call LanguageClient#textDocument_rename()<CR>

"Persistent folds
" augroup AutoSaveFolds
"     autocmd!
"     autocmd BufWinLeave * mkview
"     autocmd BufWinEnter * silent loadview
" augroup END


" let g:deoplete#enable_at_startup = 1
" let g:deoplete#enable_buffer_path = 1
" let g:deoplete#file#enable_buffer_path = 1


let g:nofrils_strbackgrounds=1
let g:nofrils_heavycomments=1




